/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package money
interface Expression{

}

open class Money(open val amount: Int, open val currency: String): Expression {
    public companion object {
        fun dollar(amount: Int) = Money(amount, "USD")
        fun franc(amount: Int) = Money(amount, "CHF")
    }
    override fun equals(other: Any?) = (other is Money) && amount == other.amount && this.currency == other.currency
    fun times(multiplier: Int): Money = Money(amount * multiplier, currency)
    fun currency():String = currency
    fun plus(addend: Money):Expression = Money(this.amount + addend.amount, this.currency)
    override fun toString(): String = "${amount} ${currency}"
}

class Bank(){
    fun reduce(source: Expression, to: String): Money {
        return Money.dollar(10)
    }
}

fun main(args: Array<String>) {
    println("Nothing")
}
